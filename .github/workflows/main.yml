name: Build for all platforms and architectures

on:
  push:
    tags:
      - "v0.0.1-beta1" 

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        arch: [x64, arm64]
        include:
          - os: ubuntu-latest
            arch: x64
            target: linux-x64
          - os: ubuntu-latest
            arch: arm64
            target: linux-arm64
          - os: macos-latest
            arch: x64
            target: macos-x64
          - os: macos-latest
            arch: arm64
            target: macos-arm64
          - os: windows-latest
            arch: x64
            target: windows-x64
          - os: windows-latest
            arch: arm64
            target: windows-arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install nuitka

      - name: Build with Nuitka (Linux/macOS)
        if: matrix.os != 'windows-latest'
        run: |
          nuitka --standalone --enable-plugin=tk-inter app.py
          tar -czf app-${{ matrix.target }}.tar.gz app.dist/

      - name: Build with Nuitka (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          nuitka --standalone --enable-plugin=tk-inter app.py
          Compress-Archive -Path app.dist\* -DestinationPath app-${{ matrix.target }}.zip

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-${{ matrix.target }}
          path: |
            app-${{ matrix.target }}.*
            app.dist/

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/app-${{ matrix.target }}.*
          asset_name: app-${{ matrix.target }}.*
          asset_content_type: application/octet-stream
