name: Build and Release 2pdownloader

on:
  workflow_dispatch:

env:
  VERSION: v0.0.1-beta1 # 定义版本号

jobs:
  build-windows:
    strategy:
      matrix:
        architecture: [x86_64, arm64]
    runs-on: windows-2019
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          pip install --timeout=300 -r requirements.txt
          pip install nuitka
          choco install ccache

      - name: Install Dependency Walker
        run: |
          $url = "https://dependencywalker.com/depends22_x64.zip"
          $output = "depends22_x64.zip"
          Invoke-WebRequest -Uri $url -OutFile $output
          Expand-Archive -Path $output -DestinationPath "C:\Tools\DependencyWalker"

      - name: Set Dependency Walker Path
        run: |
          setx NUITKA_DEPENDS_TOOL "C:\Tools\DependencyWalker\depends.exe"

      - name: Build with Nuitka
        run: |
          nuitka --standalone --enable-plugin=tk-inter app.py

      - name: Validate build output
        shell: pwsh
        run: |
          if (-Not (Test-Path "app.dist\app.exe")) {
              Write-Output "Build failed: app.exe not found in app.dist"
              exit 1
          }

      - name: Package build output
        run: |
          Compress-Archive -Path app.dist\* -DestinationPath 2pdownloader-${{ env.VERSION }}-${{ matrix.architecture }}.zip

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: 2pdownloader-${{ env.VERSION }}-Windows-${{ matrix.architecture }}
          path: 2pdownloader-${{ env.VERSION }}-${{ matrix.architecture }}.zip

  build-macos:
    strategy:
      matrix:
        architecture: [arm64, x86_64]
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          pip install --timeout=300 -r requirements.txt
          pip install nuitka
          brew install ccache

      - name: Build with Nuitka
        run: |
          nuitka --standalone --enable-plugin=tk-inter app.py
          mv app.dist 2pdownloader.app
          chmod u+x 2pdownloader.app/app.bin

      - name: Create DMG
        run: |
          mkdir dmg
          ln -s /Applications dmg/Applications
          mv 2pdownloader.app dmg/
          hdiutil create -srcfolder dmg -volname "2pdownloader" -fs HFS+ -format UDZO -size 400m 2pdownloader-${{ env.VERSION }}-${{ matrix.architecture }}.dmg

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: 2pdownloader-${{ env.VERSION }}-macOS-${{ matrix.architecture }}
          path: 2pdownloader-${{ env.VERSION }}-${{ matrix.architecture }}.dmg

  build-ubuntu:
    strategy:
      matrix:
        architecture: [x86_64, arm64]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libegl1-mesa ccache
          pip install --timeout=300 -r requirements.txt
          pip install nuitka

      - name: Build with Nuitka
        run: |
          nuitka --standalone --enable-plugin=tk-inter app.py
          tar -czf 2pdownloader-${{ env.VERSION }}-${{ matrix.architecture }}.tar.gz app.dist

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: 2pdownloader-${{ env.VERSION }}-Linux-${{ matrix.architecture }}
          path: 2pdownloader-${{ env.VERSION }}-${{ matrix.architecture }}.tar.gz
