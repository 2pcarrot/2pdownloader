name: Build 2pdownloader

on:
  workflow_dispatch:

jobs:
  build-windows:
    strategy:
      matrix:
        architecture: [x86_64, arm64]
    runs-on: windows-2019
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          pip install --timeout=300 -r requirements.txt

      - name: Build with Nuitka
        run: |
          nuitka --standalone --enable-plugin=tk-inter app.py
          Compress-Archive -Path app.dist\* -DestinationPath 2pdownloader-${{ matrix.architecture }}.zip

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: 2pdownloader-Windows-${{ matrix.architecture }}
          path: 2pdownloader-${{ matrix.architecture }}.zip

  build-macos:
    strategy:
      matrix:
        architecture: [arm64, x86_64]
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          pip install --timeout=300 -r requirements.txt
          pip install nuitka

      - name: Build with Nuitka
        run: |
          nuitka --standalone --enable-plugin=tk-inter app.py
          mv app.dist 2pdownloader.app
          chmod u+x 2pdownloader.app/Contents/MacOS/app

      - name: Create DMG
        run: |
          ln -s /Applications 2pdownloader.app/Applications
          hdiutil create -srcfolder 2pdownloader.app -volname "2pdownloader" -fs HFS+ -format UDZO -size 400m 2pdownloader-${{ matrix.architecture }}.dmg

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: 2pdownloader-macOS-${{ matrix.architecture }}
          path: 2pdownloader-${{ matrix.architecture }}.dmg

  build-ubuntu:
    strategy:
      matrix:
        architecture: [x86_64, arm64]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libegl1-mesa
          pip install --timeout=300 -r requirements.txt

      - name: Build with Nuitka
        run: |
          nuitka --standalone --enable-plugin=tk-inter app.py
          tar -czf 2pdownloader-${{ matrix.architecture }}.tar.gz app.dist

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: 2pdownloader-Linux-${{ matrix.architecture }}
          path: 2pdownloader-${{ matrix.architecture }}.tar.gz
